version: '3.8'

services:
  # Django 애플리케이션 (프로덕션용)
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: web_prod
    expose:
      - "8000"  # 내부 네트워크만 노출
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - uv-cache:/root/.cache/uv
    env_file:
      - .env.prod  # 프로덕션용 환경변수
    depends_on:
      - mysql_service
      - redis_service
    restart: unless-stopped
    command: ["uv", "run", "gunicorn", "config.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3"]

  # Nginx (프로덕션용)
  nginx:
    image: nginx:alpine
    container_name: nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL 인증서 (선택사항)
    depends_on:
      - web
    restart: unless-stopped

  # MySQL 데이터베이스
  mysql_service:
    image: mysql:8.0
    container_name: mysql_service_prod
    expose:
      - "3306"  # 내부 네트워크만 노출
    env_file:
      - .env.prod
    volumes:
      - mysql_data_prod:/var/lib/mysql
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis
  redis_service:
    image: redis:latest
    container_name: redis_service_prod
    expose:
      - "6379"  # 내부 네트워크만 노출
    volumes:
      - redis_data_prod:/data
    restart: unless-stopped

volumes:
  mysql_data_prod:
  redis_data_prod:
  static_volume:
  media_volume:
  uv-cache: